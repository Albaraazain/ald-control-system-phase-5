[tool:pytest]
# Parameter Synchronization Integration Test Configuration

# Test discovery
testpaths = tests/integration
python_files = test_parameter_*.py
python_classes = Test* *Test *Tests
python_functions = test_*

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    performance: marks tests as performance benchmarks
    database: marks tests requiring database connection
    hardware: marks tests requiring hardware (PLC) connection
    integration: marks tests as integration tests
    transaction: marks tests requiring transaction support
    sync: marks tests specific to parameter synchronization

# Test output configuration
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=3

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/integration/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test timeouts
timeout = 300
timeout_method = thread

# Async test support
asyncio_mode = auto

# Coverage configuration (if pytest-cov is installed)
# addopts = --cov=src --cov-report=html --cov-report=term-missing

# Minimum version requirements
minversion = 6.0

# Test collection configuration
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::pytest.PytestUnraisableExceptionWarning