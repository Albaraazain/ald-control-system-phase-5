{"timestamp": "2025-09-20T20:47:18.774376", "agent_id": "investigator-204116-9977cf", "finding_type": "insight", "severity": "high", "message": "Discovered authoritative DB schema via repo docs (OpenAPI-derived) and code usage. Key tables for execution/state/steps/history identified with columns and types.", "data": {"sources": ["docs/schema/schema_summary.md", "docs/schema/table_columns.json", "docs/schema/supabase_openapi.json", "src/recipe_flow/*", "src/step_flow/*", "tests/integration/*"], "tables": {"process_executions": {"columns": [["id", "uuid", "pk"], ["session_id", "uuid", "fk operator_sessions.id"], ["machine_id", "uuid", "fk machines.id"], ["recipe_id", "uuid", "fk recipes.id"], ["recipe_version", "jsonb"], ["start_time", "timestamptz"], ["end_time", "timestamptz"], ["operator_id", "uuid"], ["status", "public.process_status"], ["parameters", "jsonb"], ["error_message", "text"], ["created_at", "timestamptz"], ["updated_at", "timestamptz"], ["description", "text"]], "notes": "State is modeled in process_execution_state, not here."}, "process_execution_state": {"columns": [["id", "uuid", "pk"], ["execution_id", "uuid", "fk process_executions.id (1:1)"], ["current_step_index", "int"], ["current_overall_step", "int"], ["total_overall_steps", "int"], ["current_step", "jsonb"], ["current_step_type", "text"], ["current_step_name", "text"], ["current_valve_number", "int"], ["current_valve_duration_ms", "int"], ["current_purge_duration_ms", "int"], ["current_parameter_id", "uuid", "fk component_parameters.id"], ["current_parameter_value", "numeric"], ["current_loop_count", "int"], ["current_loop_iteration", "int"], ["progress", "jsonb"], ["process_metrics", "jsonb"], ["last_updated", "timestamptz"], ["created_at", "timestamptz"]]}, "recipe_steps": {"columns": [["id", "uuid", "pk"], ["recipe_id", "uuid", "fk recipes.id"], ["name", "text"], ["type", "text"], ["description", "text"], ["sequence_number", "int"], ["parent_step_id", "uuid"], ["created_at", "timestamptz"]]}, "valve_step_config": {"columns": [["id", "uuid", "pk"], ["step_id", "uuid", "fk recipe_steps.id"], ["valve_id", "uuid"], ["valve_number", "int"], ["duration_ms", "int"], ["created_at", "timestamptz"], ["updated_at", "timestamptz"]]}, "purge_step_config": {"columns": [["id", "uuid", "pk"], ["step_id", "uuid", "fk recipe_steps.id"], ["duration_ms", "int"], ["gas_type", "text"], ["flow_rate", "numeric"], ["created_at", "timestamptz"], ["updated_at", "timestamptz"]]}, "loop_step_config": {"columns": [["id", "uuid", "pk"], ["step_id", "uuid", "fk recipe_steps.id"], ["iteration_count", "int"], ["created_at", "timestamptz"], ["updated_at", "timestamptz"]]}, "step_execution_history": {"columns": [["id", "uuid", "pk"], ["process_id", "uuid", "fk process_executions.id"], ["step_number", "int"], ["step_type", "text"], ["step_name", "text"], ["started_at", "timestamptz"], ["ended_at", "timestamptz"], ["parameters", "jsonb"], ["created_at", "timestamptz"]], "presence": "Present in OpenAPI/table_columns docs; not referenced in code."}}}}
{"timestamp": "2025-09-20T20:47:40.936925", "agent_id": "investigator-204116-9977cf", "finding_type": "recommendation", "severity": "high", "message": "History should record on process_execution_state transitions; propose BEFORE/AFTER UPDATE trigger capturing step start/end and a cleanup on process completion/abort.", "data": {"trigger_points": [{"table": "public.process_execution_state", "event": "AFTER UPDATE", "when": "(NEW.current_step_index IS DISTINCT FROM OLD.current_step_index) OR (NEW.current_step_type IS DISTINCT FROM OLD.current_step_type) OR (NEW.current_step_name IS DISTINCT FROM OLD.current_step_name)", "actions": ["Close prior open history row for this process_id by setting ended_at = now() where process_id = NEW.execution_id and ended_at IS NULL", "Insert new step_execution_history row with process_id=NEW.execution_id, step_number=COALESCE(NEW.current_overall_step, NEW.current_step_index), step_type=NEW.current_step_type, step_name=NEW.current_step_name, started_at=now(), parameters= jsonb_build_object('valve_number', NEW.current_valve_number, 'valve_duration_ms', NEW.current_valve_duration_ms, 'purge_duration_ms', NEW.current_purge_duration_ms, 'parameter_id', NEW.current_parameter_id, 'parameter_value', NEW.current_parameter_value, 'loop_count', NEW.current_loop_count, 'loop_iteration', NEW.current_loop_iteration, 'current_step', NEW.current_step)"]}, {"table": "public.process_executions", "event": "AFTER UPDATE", "when": "NEW.status IN ('completed','failed','aborted') AND OLD.status IS DISTINCT FROM NEW.status", "actions": ["Close any open step_execution_history rows for this process by setting ended_at = now() where process_id = NEW.id and ended_at IS NULL"]}], "notes": ["No active_step_id column exists; rely on current_step_index/name/type and current_overall_step.", "Purge step is no-op in code; still tracked via process_execution_state fields and should generate a history record.", "Ensure idempotency and guard against duplicate inserts (use unique index on (process_id, step_number, started_at) or logic)."]}}
{"timestamp": "2025-09-20T20:47:50.098254", "agent_id": "investigator-204116-9977cf", "finding_type": "insight", "severity": "medium", "message": "Existing SQL migration path found; recommend placing new trigger migration alongside it.", "data": {"existing_sql": ["src/migrations/create_machine_health_table.sql"], "other_sql_examples": ["docs/reports/simple_valve_recipe.sql"], "recommended_new_migration_path": "src/migrations/create_step_execution_history_triggers.sql", "idempotency_guidance": ["Use CREATE OR REPLACE FUNCTION", "CREATE TRIGGER IF NOT EXISTS not supported -> wrap in DO $$ block to check pg_trigger catalog or create only if NOT EXISTS via conditional", "Guard DDL with IF NOT EXISTS for table/indexes and DROP ... IF EXISTS in rollback"], "rollback_suggestions": ["DROP TRIGGER IF EXISTS trg_process_state_history ON public.process_execution_state;", "DROP FUNCTION IF EXISTS public.fn_record_step_history();", "Optional: DROP TRIGGER IF EXISTS trg_process_end_close_history ON public.process_executions;"]}}
{"timestamp": "2025-09-20T20:48:06.666413", "agent_id": "investigator-204116-9977cf", "finding_type": "insight", "severity": "medium", "message": "Gaps and assumptions identified; propose canonical fields and safe defaults for history capture.", "data": {"gaps": [{"area": "Active step identity", "details": "No active_step_id in process_executions or process_execution_state; code does not persist step UUID. Only index/type/name and per-type fields exist."}, {"area": "History linkage", "details": "step_execution_history lacks recipe_step_id; linkage by step_number/type/name only."}, {"area": "State init", "details": "Starter defers creating process_execution_state row, expecting a DB trigger (not present in repo). Ensure one row exists per execution (unique on execution_id)."}, {"area": "Enums", "details": "process_executions.status uses enum public.process_status. Valid values inferred from code/logs: preparing,running,paused,completed,failed,aborted."}], "canonical_recommendations": [{"table": "process_execution_state", "add_columns": [["current_recipe_step_id", "uuid", "NULLABLE, FK recipe_steps.id"]], "rationale": "Precise linkage for history and analytics; optional to avoid breaking code."}, {"table": "step_execution_history", "add_columns": [["recipe_step_id", "uuid", "NULLABLE, FK recipe_steps.id"]], "rationale": "Enable exact joins to step definition even if names change."}, {"table": "process_execution_state", "constraints": [["UNIQUE (execution_id)"]], "rationale": "One live state row per process; OpenAPI suggests 1:1."}, {"table": "step_execution_history", "indexes": [["idx_step_hist_process_time", "(process_id, started_at)"]], "rationale": "Fast retrieval and range queries."}], "naming_consistency": [{"use": "start_time/end_time on process_executions", "avoid": "started_at/finished_at (not present)", "evidence": "docs/reports/* show errors when using started_at; OpenAPI shows start_time/end_time."}]}}
