[tool:pytest]
minversion = 8.0
addopts =
    -ra
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    -v

testpaths = tests

# Test categories using markers
markers =
    unit: Unit tests - fast, isolated, mocked dependencies
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - full system testing
    slow: Tests that take more than 5 seconds to run
    async: Tests that use asyncio
    database: Tests that require database connection
    plc: Tests that require PLC connection or simulation
    security: Security-related tests
    performance: Performance and benchmark tests
    smoke: Quick smoke tests for basic functionality
    regression: Regression tests for known bug fixes

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Logging configuration during tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for hanging tests (requires pytest-timeout)
timeout = 300

# Parallel execution configuration (when using pytest-xdist)
# Run with: pytest -n auto
addopts = --maxfail=5

# Filter warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning:supabase.*
    ignore::DeprecationWarning:pymodbus.*
    ignore::RuntimeWarning:asyncio.*

# Test collection customization
collect_ignore = [
    "myenv",
    ".agent-workspace",
    "tools/debug",
    "stress_test_*.py",
    "test_*.py"
]

# Minimum test collection
required_plugins =
    pytest-asyncio
    pytest-cov
    pytest-mock
    pytest-xdist