{
  "swagger": "2.0",
  "info": {
    "description": "",
    "title": "standard public schema",
    "version": "12.2.3 (519615d)"
  },
  "host": "yceyfsqusdmcwgkwxcnt.supabase.co:443",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "produces": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/openapi+json",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "OpenAPI description (this document)",
        "tags": [
          "Introspection"
        ]
      }
    },
    "/loop_step_config": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.iteration_count"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/loop_step_config"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Configuration for loop-type recipe steps",
        "tags": [
          "loop_step_config"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.loop_step_config"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Configuration for loop-type recipe steps",
        "tags": [
          "loop_step_config"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.iteration_count"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for loop-type recipe steps",
        "tags": [
          "loop_step_config"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.iteration_count"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.loop_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/body.loop_step_config"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for loop-type recipe steps",
        "tags": [
          "loop_step_config"
        ]
      }
    },
    "/experiments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiments.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.process_execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.recipe_version"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.status"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.notes"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/experiments"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "experiments"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.experiments"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "experiments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiments.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.process_execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.recipe_version"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.status"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.notes"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "experiments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiments.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.process_execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.recipe_version"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.status"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.notes"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.experiments.updated_at"
          },
          {
            "$ref": "#/parameters/body.experiments"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "experiments"
        ]
      }
    },
    "/machine_health": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_health.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_last_check"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_last_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_reconnect_attempts"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_error"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_last_check"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_last_message"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_error"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/machine_health"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Real-time health monitoring data for machines including PLC and realtime connection status",
        "tags": [
          "machine_health"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.machine_health"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Real-time health monitoring data for machines including PLC and realtime connection status",
        "tags": [
          "machine_health"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_health.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_last_check"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_last_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_reconnect_attempts"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_error"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_last_check"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_last_message"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_error"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Real-time health monitoring data for machines including PLC and realtime connection status",
        "tags": [
          "machine_health"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_health.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_last_check"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_last_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_reconnect_attempts"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.plc_error"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_connected"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_last_check"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_last_message"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.realtime_error"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_health.created_at"
          },
          {
            "$ref": "#/parameters/body.machine_health"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Real-time health monitoring data for machines including PLC and realtime connection status",
        "tags": [
          "machine_health"
        ]
      }
    },
    "/operator_sessions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_status"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.reservation_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.process_execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.last_heartbeat"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.grace_period_used_minutes"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.is_extended"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.extension_granted_until"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/operator_sessions"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "operator_sessions"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.operator_sessions"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "operator_sessions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_status"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.reservation_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.process_execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.last_heartbeat"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.grace_period_used_minutes"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.is_extended"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.extension_granted_until"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "operator_sessions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.session_status"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.reservation_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.process_execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.last_heartbeat"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.grace_period_used_minutes"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.is_extended"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.extension_granted_until"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.operator_sessions.updated_at"
          },
          {
            "$ref": "#/parameters/body.operator_sessions"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "operator_sessions"
        ]
      }
    },
    "/user_machine_assignments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.role"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.assigned_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.assigned_by"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.permissions"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/user_machine_assignments"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Primary table for managing user assignments to machines. Consolidated from machine_assignments.",
        "tags": [
          "user_machine_assignments"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.user_machine_assignments"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Primary table for managing user assignments to machines. Consolidated from machine_assignments.",
        "tags": [
          "user_machine_assignments"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.role"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.assigned_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.assigned_by"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.permissions"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Primary table for managing user assignments to machines. Consolidated from machine_assignments.",
        "tags": [
          "user_machine_assignments"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.role"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.assigned_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.assigned_by"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.permissions"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_assignments.updated_at"
          },
          {
            "$ref": "#/parameters/body.user_machine_assignments"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Primary table for managing user assignments to machines. Consolidated from machine_assignments.",
        "tags": [
          "user_machine_assignments"
        ]
      }
    },
    "/purge_step_config": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.gas_type"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.flow_rate"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/purge_step_config"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Configuration for purge-type recipe steps",
        "tags": [
          "purge_step_config"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.purge_step_config"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Configuration for purge-type recipe steps",
        "tags": [
          "purge_step_config"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.gas_type"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.flow_rate"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for purge-type recipe steps",
        "tags": [
          "purge_step_config"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.gas_type"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.flow_rate"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.purge_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/body.purge_step_config"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for purge-type recipe steps",
        "tags": [
          "purge_step_config"
        ]
      }
    },
    "/command_responses": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.command_responses.id"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.response"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.command_id"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/command_responses"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "command_responses"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.command_responses"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "command_responses"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.command_responses.id"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.response"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.command_id"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "command_responses"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.command_responses.id"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.response"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.command_responses.command_id"
          },
          {
            "$ref": "#/parameters/body.command_responses"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "command_responses"
        ]
      }
    },
    "/profiles": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.profiles.id"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.username"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.email"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.role"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.status"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.role_id"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.legacy_role"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.migrated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.full_name"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.phone"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.avatar_url"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/profiles"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "profiles"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.profiles"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "profiles"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.profiles.id"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.username"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.email"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.role"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.status"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.role_id"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.legacy_role"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.migrated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.full_name"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.phone"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.avatar_url"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "profiles"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.profiles.id"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.username"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.email"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.role"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.status"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.role_id"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.legacy_role"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.migrated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.full_name"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.phone"
          },
          {
            "$ref": "#/parameters/rowFilter.profiles.avatar_url"
          },
          {
            "$ref": "#/parameters/body.profiles"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "profiles"
        ]
      }
    },
    "/machine_state": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_state.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.current_state"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.state_since"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.is_failure_mode"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.failure_component"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.failure_description"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/machine_state"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Machine operational state - RLS enabled, users see assigned machines",
        "tags": [
          "machine_state"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.machine_state"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Machine operational state - RLS enabled, users see assigned machines",
        "tags": [
          "machine_state"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_state.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.current_state"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.state_since"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.is_failure_mode"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.failure_component"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.failure_description"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Machine operational state - RLS enabled, users see assigned machines",
        "tags": [
          "machine_state"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_state.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.current_state"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.state_since"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.is_failure_mode"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.failure_component"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.failure_description"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_state.updated_at"
          },
          {
            "$ref": "#/parameters/body.machine_state"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Machine operational state - RLS enabled, users see assigned machines",
        "tags": [
          "machine_state"
        ]
      }
    },
    "/recipe_parameters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_unit"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.min_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.max_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.is_critical"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.tolerance_percentage"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/recipe_parameters"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Normalized recipe-level parameters (temperature, pressure, etc)",
        "tags": [
          "recipe_parameters"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.recipe_parameters"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Normalized recipe-level parameters (temperature, pressure, etc)",
        "tags": [
          "recipe_parameters"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_unit"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.min_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.max_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.is_critical"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.tolerance_percentage"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Normalized recipe-level parameters (temperature, pressure, etc)",
        "tags": [
          "recipe_parameters"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_unit"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.parameter_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.min_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.max_value"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.is_critical"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.tolerance_percentage"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_parameters.updated_at"
          },
          {
            "$ref": "#/parameters/body.recipe_parameters"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Normalized recipe-level parameters (temperature, pressure, etc)",
        "tags": [
          "recipe_parameters"
        ]
      }
    },
    "/recipe_commands": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.status"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.recipe_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.id"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/recipe_commands"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Recipe execution commands - RLS enabled, machine assignment based access",
        "tags": [
          "recipe_commands"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.recipe_commands"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Recipe execution commands - RLS enabled, machine assignment based access",
        "tags": [
          "recipe_commands"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.status"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.recipe_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.id"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Recipe execution commands - RLS enabled, machine assignment based access",
        "tags": [
          "recipe_commands"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.status"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.recipe_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_commands.id"
          },
          {
            "$ref": "#/parameters/body.recipe_commands"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Recipe execution commands - RLS enabled, machine assignment based access",
        "tags": [
          "recipe_commands"
        ]
      }
    },
    "/maintenance_records": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.schedule_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.performed_by"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.maintenance_type"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.description"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.performed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.next_maintenance_date"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.notes"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.attachments"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/maintenance_records"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Maintenance records - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_records"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.maintenance_records"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Maintenance records - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_records"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.schedule_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.performed_by"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.maintenance_type"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.description"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.performed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.next_maintenance_date"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.notes"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.attachments"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Maintenance records - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_records"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.schedule_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.performed_by"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.maintenance_type"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.description"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.performed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.next_maintenance_date"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.notes"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.attachments"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_records.created_at"
          },
          {
            "$ref": "#/parameters/body.maintenance_records"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Maintenance records - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_records"
        ]
      }
    },
    "/parameter_value_history": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.timestamp"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/parameter_value_history"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Continuous time-series history of parameter value changes for monitoring and trending, independent of recipe execution state",
        "tags": [
          "parameter_value_history"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.parameter_value_history"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Continuous time-series history of parameter value changes for monitoring and trending, independent of recipe execution state",
        "tags": [
          "parameter_value_history"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.timestamp"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Continuous time-series history of parameter value changes for monitoring and trending, independent of recipe execution state",
        "tags": [
          "parameter_value_history"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.timestamp"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_value_history.created_at"
          },
          {
            "$ref": "#/parameters/body.parameter_value_history"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Continuous time-series history of parameter value changes for monitoring and trending, independent of recipe execution state",
        "tags": [
          "parameter_value_history"
        ]
      }
    },
    "/maintenance_schedule": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.maintenance_type"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.frequency_days"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.last_performed"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.next_due"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/maintenance_schedule"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Maintenance schedule - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_schedule"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.maintenance_schedule"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Maintenance schedule - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_schedule"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.maintenance_type"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.frequency_days"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.last_performed"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.next_due"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Maintenance schedule - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_schedule"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.maintenance_type"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.frequency_days"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.last_performed"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.next_due"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.maintenance_schedule.updated_at"
          },
          {
            "$ref": "#/parameters/body.maintenance_schedule"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Maintenance schedule - RLS enabled, users see assigned machines",
        "tags": [
          "maintenance_schedule"
        ]
      }
    },
    "/valve_step_config": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.valve_id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.valve_number"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/valve_step_config"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Configuration for valve-type recipe steps",
        "tags": [
          "valve_step_config"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.valve_step_config"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Configuration for valve-type recipe steps",
        "tags": [
          "valve_step_config"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.valve_id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.valve_number"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for valve-type recipe steps",
        "tags": [
          "valve_step_config"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.valve_id"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.valve_number"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.valve_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/body.valve_step_config"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for valve-type recipe steps",
        "tags": [
          "valve_step_config"
        ]
      }
    },
    "/machine_components": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_components.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.name"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.type"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.is_activated"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.is_persistent"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.definition_id"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/machine_components"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Machine components - RLS enabled, users see assigned machines",
        "tags": [
          "machine_components"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.machine_components"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Machine components - RLS enabled, users see assigned machines",
        "tags": [
          "machine_components"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_components.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.name"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.type"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.is_activated"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.is_persistent"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.definition_id"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Machine components - RLS enabled, users see assigned machines",
        "tags": [
          "machine_components"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machine_components.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.name"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.type"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.is_activated"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.is_persistent"
          },
          {
            "$ref": "#/parameters/rowFilter.machine_components.definition_id"
          },
          {
            "$ref": "#/parameters/body.machine_components"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Machine components - RLS enabled, users see assigned machines",
        "tags": [
          "machine_components"
        ]
      }
    },
    "/machines": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machines.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.serial_number"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.location"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.lab_name"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.lab_institution"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.model"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.machine_type"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.install_date"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.status"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.current_operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.last_maintenance_date"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.admin_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.current_process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.is_virtual"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.virtual_config"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/machines"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "machines"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.machines"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "machines"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machines.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.serial_number"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.location"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.lab_name"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.lab_institution"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.model"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.machine_type"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.install_date"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.status"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.current_operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.last_maintenance_date"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.admin_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.current_process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.is_virtual"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.virtual_config"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "machines"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.machines.id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.serial_number"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.location"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.lab_name"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.lab_institution"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.model"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.machine_type"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.install_date"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.status"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.current_operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.last_maintenance_date"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.admin_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.current_process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.is_virtual"
          },
          {
            "$ref": "#/parameters/rowFilter.machines.virtual_config"
          },
          {
            "$ref": "#/parameters/body.machines"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "machines"
        ]
      }
    },
    "/recipe_steps": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.sequence_number"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.parent_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/recipe_steps"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Recipe steps table - parameters now stored in type-specific config tables (valve_step_config, purge_step_config, loop_step_config)",
        "tags": [
          "recipe_steps"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.recipe_steps"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Recipe steps table - parameters now stored in type-specific config tables (valve_step_config, purge_step_config, loop_step_config)",
        "tags": [
          "recipe_steps"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.sequence_number"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.parent_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Recipe steps table - parameters now stored in type-specific config tables (valve_step_config, purge_step_config, loop_step_config)",
        "tags": [
          "recipe_steps"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.sequence_number"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.parent_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_steps.created_at"
          },
          {
            "$ref": "#/parameters/body.recipe_steps"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Recipe steps table - parameters now stored in type-specific config tables (valve_step_config, purge_step_config, loop_step_config)",
        "tags": [
          "recipe_steps"
        ]
      }
    },
    "/process_execution_state": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_index"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_overall_step"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.total_overall_steps"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_valve_number"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_valve_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_purge_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_parameter_value"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_loop_count"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_loop_iteration"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.progress"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.process_metrics"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.last_updated"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/process_execution_state"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Normalized process execution state - separated from main execution table for performance and better data organization",
        "tags": [
          "process_execution_state"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.process_execution_state"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Normalized process execution state - separated from main execution table for performance and better data organization",
        "tags": [
          "process_execution_state"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_index"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_overall_step"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.total_overall_steps"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_valve_number"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_valve_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_purge_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_parameter_value"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_loop_count"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_loop_iteration"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.progress"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.process_metrics"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.last_updated"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Normalized process execution state - separated from main execution table for performance and better data organization",
        "tags": [
          "process_execution_state"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.execution_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_index"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_overall_step"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.total_overall_steps"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_valve_number"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_valve_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_purge_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_parameter_value"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_loop_count"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.current_loop_iteration"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.progress"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.process_metrics"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.last_updated"
          },
          {
            "$ref": "#/parameters/rowFilter.process_execution_state.created_at"
          },
          {
            "$ref": "#/parameters/body.process_execution_state"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Normalized process execution state - separated from main execution table for performance and better data organization",
        "tags": [
          "process_execution_state"
        ]
      }
    },
    "/component_parameters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_parameters.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.min_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.max_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.current_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.set_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.show_in_graph"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.is_writable"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.data_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.show_in_ui"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.definition_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.read_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.read_modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.write_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.write_modbus_type"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/component_parameters"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Component parameters table updated with correct modbus addresses for MACHINE-001 - binary parameters use same address for read/write, analog parameters have distinct read/write addresses",
        "tags": [
          "component_parameters"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.component_parameters"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Component parameters table updated with correct modbus addresses for MACHINE-001 - binary parameters use same address for read/write, analog parameters have distinct read/write addresses",
        "tags": [
          "component_parameters"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_parameters.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.min_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.max_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.current_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.set_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.show_in_graph"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.is_writable"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.data_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.show_in_ui"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.definition_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.read_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.read_modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.write_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.write_modbus_type"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Component parameters table updated with correct modbus addresses for MACHINE-001 - binary parameters use same address for read/write, analog parameters have distinct read/write addresses",
        "tags": [
          "component_parameters"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_parameters.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.min_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.max_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.current_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.set_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.show_in_graph"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.is_writable"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.data_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.show_in_ui"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.definition_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.read_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.read_modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.write_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters.write_modbus_type"
          },
          {
            "$ref": "#/parameters/body.component_parameters"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Component parameters table updated with correct modbus addresses for MACHINE-001 - binary parameters use same address for read/write, analog parameters have distinct read/write addresses",
        "tags": [
          "component_parameters"
        ]
      }
    },
    "/process_data_points": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_data_points.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.value"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.timestamp"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/process_data_points"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Process sensor data - RLS enabled, users see own process data",
        "tags": [
          "process_data_points"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.process_data_points"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Process sensor data - RLS enabled, users see own process data",
        "tags": [
          "process_data_points"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_data_points.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.value"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.timestamp"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Process sensor data - RLS enabled, users see own process data",
        "tags": [
          "process_data_points"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_data_points.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.value"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.timestamp"
          },
          {
            "$ref": "#/parameters/rowFilter.process_data_points.created_at"
          },
          {
            "$ref": "#/parameters/body.process_data_points"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Process sensor data - RLS enabled, users see own process data",
        "tags": [
          "process_data_points"
        ]
      }
    },
    "/component_definitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_definitions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.default_parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.vendor"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.part_number"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.datasheet_url"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/component_definitions"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Component type definitions - RLS enabled, public read, admin write",
        "tags": [
          "component_definitions"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.component_definitions"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Component type definitions - RLS enabled, public read, admin write",
        "tags": [
          "component_definitions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_definitions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.default_parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.vendor"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.part_number"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.datasheet_url"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Component type definitions - RLS enabled, public read, admin write",
        "tags": [
          "component_definitions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_definitions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.default_parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.vendor"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.part_number"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.datasheet_url"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_definitions.updated_at"
          },
          {
            "$ref": "#/parameters/body.component_definitions"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Component type definitions - RLS enabled, public read, admin write",
        "tags": [
          "component_definitions"
        ]
      }
    },
    "/migration_audit": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.migration_audit.id"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.migration_name"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.records_affected"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/migration_audit"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "migration_audit"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.migration_audit"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "migration_audit"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.migration_audit.id"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.migration_name"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.records_affected"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "migration_audit"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.migration_audit.id"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.migration_name"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.migration_audit.records_affected"
          },
          {
            "$ref": "#/parameters/body.migration_audit"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "migration_audit"
        ]
      }
    },
    "/user_roles": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_roles.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.name"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.display_name"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.description"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.hierarchy_level"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.permissions"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/user_roles"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "user_roles"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.user_roles"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "user_roles"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_roles.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.name"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.display_name"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.description"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.hierarchy_level"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.permissions"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "user_roles"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_roles.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.name"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.display_name"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.description"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.hierarchy_level"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.permissions"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.is_active"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_roles.updated_at"
          },
          {
            "$ref": "#/parameters/body.user_roles"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "user_roles"
        ]
      }
    },
    "/experiment_metadata": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.experiment_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.parameter_tolerances"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.quality_threshold"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.parameter_units"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.substrate_info"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.environmental_conditions"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.equipment_settings"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/experiment_metadata"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Experiment metadata - RLS enabled, users see own experiments",
        "tags": [
          "experiment_metadata"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.experiment_metadata"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Experiment metadata - RLS enabled, users see own experiments",
        "tags": [
          "experiment_metadata"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.experiment_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.parameter_tolerances"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.quality_threshold"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.parameter_units"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.substrate_info"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.environmental_conditions"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.equipment_settings"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Experiment metadata - RLS enabled, users see own experiments",
        "tags": [
          "experiment_metadata"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.experiment_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.parameter_tolerances"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.quality_threshold"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.parameter_units"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.substrate_info"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.environmental_conditions"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.equipment_settings"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_metadata.created_at"
          },
          {
            "$ref": "#/parameters/body.experiment_metadata"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Experiment metadata - RLS enabled, users see own experiments",
        "tags": [
          "experiment_metadata"
        ]
      }
    },
    "/component_parameter_definitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.component_definition_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.description"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.unit"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.default_min"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.default_max"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.is_writable"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/component_parameter_definitions"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Parameter definitions for components - RLS enabled, public read, admin write",
        "tags": [
          "component_parameter_definitions"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.component_parameter_definitions"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Parameter definitions for components - RLS enabled, public read, admin write",
        "tags": [
          "component_parameter_definitions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.component_definition_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.description"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.unit"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.default_min"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.default_max"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.is_writable"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Parameter definitions for components - RLS enabled, public read, admin write",
        "tags": [
          "component_parameter_definitions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.component_definition_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.description"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.unit"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.default_min"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.default_max"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.is_writable"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameter_definitions.updated_at"
          },
          {
            "$ref": "#/parameters/body.component_parameter_definitions"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Parameter definitions for components - RLS enabled, public read, admin write",
        "tags": [
          "component_parameter_definitions"
        ]
      }
    },
    "/parameter_step_config": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.target_value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.adjustment_rate"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.hold_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/parameter_step_config"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Configuration for parameter-type recipe steps",
        "tags": [
          "parameter_step_config"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.parameter_step_config"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Configuration for parameter-type recipe steps",
        "tags": [
          "parameter_step_config"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.target_value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.adjustment_rate"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.hold_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for parameter-type recipe steps",
        "tags": [
          "parameter_step_config"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.parameter_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.target_value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.adjustment_rate"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.hold_duration_ms"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_step_config.updated_at"
          },
          {
            "$ref": "#/parameters/body.parameter_step_config"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Configuration for parameter-type recipe steps",
        "tags": [
          "parameter_step_config"
        ]
      }
    },
    "/recipes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipes.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.version"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.is_public"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.created_by"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.machine_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.substrate"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.chamber_temperature_set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.pressure_set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/recipes"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "recipes"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.recipes"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "recipes"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipes.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.version"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.is_public"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.created_by"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.machine_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.substrate"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.chamber_temperature_set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.pressure_set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "recipes"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipes.id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.version"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.is_public"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.created_by"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.machine_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.substrate"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.chamber_temperature_set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.pressure_set_point"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipes.updated_at"
          },
          {
            "$ref": "#/parameters/body.recipes"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "recipes"
        ]
      }
    },
    "/virtual_machine_server_status": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.id"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.status"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.last_ping"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.metadata"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/virtual_machine_server_status"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "virtual_machine_server_status"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.virtual_machine_server_status"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "virtual_machine_server_status"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.id"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.status"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.last_ping"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.metadata"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "virtual_machine_server_status"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.id"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.status"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.last_ping"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.metadata"
          },
          {
            "$ref": "#/parameters/rowFilter.virtual_machine_server_status.updated_at"
          },
          {
            "$ref": "#/parameters/body.virtual_machine_server_status"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "virtual_machine_server_status"
        ]
      }
    },
    "/app_settings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.app_settings.key"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.value"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.description"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/app_settings"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Application configuration settings - RLS enabled, admin-only with selective public reads",
        "tags": [
          "app_settings"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.app_settings"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Application configuration settings - RLS enabled, admin-only with selective public reads",
        "tags": [
          "app_settings"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.app_settings.key"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.value"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.description"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Application configuration settings - RLS enabled, admin-only with selective public reads",
        "tags": [
          "app_settings"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.app_settings.key"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.value"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.description"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.app_settings.updated_at"
          },
          {
            "$ref": "#/parameters/body.app_settings"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Application configuration settings - RLS enabled, admin-only with selective public reads",
        "tags": [
          "app_settings"
        ]
      }
    },
    "/experiment_results": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiment_results.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.experiment_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.quality_metrics"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.parameter_deviations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.observations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.recommendations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.measurements"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.quality_score"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.critical_deviations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/experiment_results"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Experiment results - RLS enabled, users see own experiments",
        "tags": [
          "experiment_results"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.experiment_results"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Experiment results - RLS enabled, users see own experiments",
        "tags": [
          "experiment_results"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiment_results.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.experiment_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.quality_metrics"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.parameter_deviations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.observations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.recommendations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.measurements"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.quality_score"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.critical_deviations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Experiment results - RLS enabled, users see own experiments",
        "tags": [
          "experiment_results"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.experiment_results.id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.experiment_id"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.quality_metrics"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.parameter_deviations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.observations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.recommendations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.measurements"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.quality_score"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.critical_deviations"
          },
          {
            "$ref": "#/parameters/rowFilter.experiment_results.created_at"
          },
          {
            "$ref": "#/parameters/body.experiment_results"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Experiment results - RLS enabled, users see own experiments",
        "tags": [
          "experiment_results"
        ]
      }
    },
    "/user_machine_preferences": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.current_machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.last_switched_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.preferences"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/user_machine_preferences"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "user_machine_preferences"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.user_machine_preferences"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "user_machine_preferences"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.current_machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.last_switched_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.preferences"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "user_machine_preferences"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.current_machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.last_switched_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.preferences"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.user_machine_preferences.updated_at"
          },
          {
            "$ref": "#/parameters/body.user_machine_preferences"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "user_machine_preferences"
        ]
      }
    },
    "/recipe_step_configs_archive": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.sequence_number"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.parent_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.config"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.archived_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.archive_reason"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.original_table_name"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/recipe_step_configs_archive"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "recipe_step_configs_archive"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.recipe_step_configs_archive"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "recipe_step_configs_archive"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.sequence_number"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.parent_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.config"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.archived_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.archive_reason"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.original_table_name"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "recipe_step_configs_archive"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.sequence_number"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.description"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.parent_step_id"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.config"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.archived_at"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.archive_reason"
          },
          {
            "$ref": "#/parameters/rowFilter.recipe_step_configs_archive.original_table_name"
          },
          {
            "$ref": "#/parameters/body.recipe_step_configs_archive"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "recipe_step_configs_archive"
        ]
      }
    },
    "/process_executions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_executions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.session_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.recipe_version"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.status"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.description"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/process_executions"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Core process execution records - state tracked in process_execution_state table",
        "tags": [
          "process_executions"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.process_executions"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Core process execution records - state tracked in process_execution_state table",
        "tags": [
          "process_executions"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_executions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.session_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.recipe_version"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.status"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.description"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Core process execution records - state tracked in process_execution_state table",
        "tags": [
          "process_executions"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.process_executions.id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.session_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.recipe_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.recipe_version"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.start_time"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.end_time"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.operator_id"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.status"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.updated_at"
          },
          {
            "$ref": "#/parameters/rowFilter.process_executions.description"
          },
          {
            "$ref": "#/parameters/body.process_executions"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Core process execution records - state tracked in process_execution_state table",
        "tags": [
          "process_executions"
        ]
      }
    },
    "/step_execution_history": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.id"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_number"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.started_at"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.ended_at"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/step_execution_history"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "step_execution_history"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.step_execution_history"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "step_execution_history"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.id"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_number"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.started_at"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.ended_at"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "step_execution_history"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.id"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.process_id"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_number"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_type"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.step_name"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.started_at"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.ended_at"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.parameters"
          },
          {
            "$ref": "#/parameters/rowFilter.step_execution_history.created_at"
          },
          {
            "$ref": "#/parameters/body.step_execution_history"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "step_execution_history"
        ]
      }
    },
    "/parameter_control_commands": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.parameter_name"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.target_value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.completed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.timeout_ms"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/parameter_control_commands"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Commands for testing parameter control from control channel to machine via pymodbus",
        "tags": [
          "parameter_control_commands"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.parameter_control_commands"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Commands for testing parameter control from control channel to machine via pymodbus",
        "tags": [
          "parameter_control_commands"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.parameter_name"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.target_value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.completed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.timeout_ms"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Commands for testing parameter control from control channel to machine via pymodbus",
        "tags": [
          "parameter_control_commands"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.parameter_name"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.target_value"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.executed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.completed_at"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.error_message"
          },
          {
            "$ref": "#/parameters/rowFilter.parameter_control_commands.timeout_ms"
          },
          {
            "$ref": "#/parameters/body.parameter_control_commands"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Commands for testing parameter control from control channel to machine via pymodbus",
        "tags": [
          "parameter_control_commands"
        ]
      }
    },
    "/component_parameters_full": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.component_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.definition_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.parameter_name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.description"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.unit"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.min_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.max_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.current_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.set_value"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.show_in_graph"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.is_writable"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.show_in_ui"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.data_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.read_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.read_modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.write_modbus_address"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.write_modbus_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.component_name"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.component_type"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.machine_serial"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.machine_id"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.component_parameters_full.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/component_parameters_full"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Full component parameters view with all modbus columns including read/write distinctions for parameter control and monitoring",
        "tags": [
          "component_parameters_full"
        ]
      }
    },
    "/rpc/commit_transaction": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) commit_transaction"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) commit_transaction"
        ]
      }
    },
    "/rpc/get_user_permissions": {
      "get": {
        "parameters": [
          {
            "format": "uuid",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_user_permissions"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "user_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "required": [
                "user_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_user_permissions"
        ]
      }
    },
    "/rpc/get_rpc_function_parameters": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_function_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_rpc_function_parameters"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_function_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_function_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_rpc_function_parameters"
        ]
      }
    },
    "/rpc/cleanup_orphaned_process_states": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Removes process_execution_state records that have no matching process_executions record",
        "tags": [
          "(rpc) cleanup_orphaned_process_states"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "description": "Removes process_execution_state records that have no matching process_executions record",
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Removes process_execution_state records that have no matching process_executions record",
        "tags": [
          "(rpc) cleanup_orphaned_process_states"
        ]
      }
    },
    "/rpc/update_process_state_progress": {
      "get": {
        "parameters": [
          {
            "format": "uuid",
            "in": "query",
            "name": "p_execution_id",
            "required": true,
            "type": "string"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "p_current_step_index",
            "required": false,
            "type": "integer"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "p_current_overall_step",
            "required": false,
            "type": "integer"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "p_total_overall_steps",
            "required": false,
            "type": "integer"
          },
          {
            "format": "jsonb",
            "in": "query",
            "name": "p_progress",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Updates process state progress fields, creates state if needed",
        "tags": [
          "(rpc) update_process_state_progress"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "description": "Updates process state progress fields, creates state if needed",
              "properties": {
                "p_current_overall_step": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_current_step_index": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_execution_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "p_progress": {
                  "format": "jsonb"
                },
                "p_total_overall_steps": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "p_execution_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Updates process state progress fields, creates state if needed",
        "tags": [
          "(rpc) update_process_state_progress"
        ]
      }
    },
    "/rpc/get_table_columns": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_schema_name",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_table_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_columns"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_schema_name": {
                  "format": "text",
                  "type": "string"
                },
                "p_table_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_schema_name",
                "p_table_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_columns"
        ]
      }
    },
    "/rpc/get_table_triggers": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_schema_name",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_table_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_triggers"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_schema_name": {
                  "format": "text",
                  "type": "string"
                },
                "p_table_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_schema_name",
                "p_table_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_triggers"
        ]
      }
    },
    "/rpc/rollback_machine_parameter_controls_migration": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Emergency rollback function for machine parameter controls migration. Use only if migration needs to be undone.",
        "tags": [
          "(rpc) rollback_machine_parameter_controls_migration"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "description": "Emergency rollback function for machine parameter controls migration. Use only if migration needs to be undone.",
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Emergency rollback function for machine parameter controls migration. Use only if migration needs to be undone.",
        "tags": [
          "(rpc) rollback_machine_parameter_controls_migration"
        ]
      }
    },
    "/rpc/get_users_with_permission": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "permission_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_users_with_permission"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "permission_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "permission_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_users_with_permission"
        ]
      }
    },
    "/rpc/update_operator_machine_assignments": {
      "get": {
        "description": "This should be run after migrations or when experiencing permission issues.",
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Run this function to ensure all operators have proper machine assignments. ",
        "tags": [
          "(rpc) update_operator_machine_assignments"
        ]
      },
      "post": {
        "description": "This should be run after migrations or when experiencing permission issues.",
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "description": "Run this function to ensure all operators have proper machine assignments. \nThis should be run after migrations or when experiencing permission issues.",
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Run this function to ensure all operators have proper machine assignments. ",
        "tags": [
          "(rpc) update_operator_machine_assignments"
        ]
      }
    },
    "/rpc/get_or_create_process_state": {
      "get": {
        "parameters": [
          {
            "format": "uuid",
            "in": "query",
            "name": "p_execution_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Gets existing process state or creates a new one if it doesn't exist",
        "tags": [
          "(rpc) get_or_create_process_state"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "description": "Gets existing process state or creates a new one if it doesn't exist",
              "properties": {
                "p_execution_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "required": [
                "p_execution_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Gets existing process state or creates a new one if it doesn't exist",
        "tags": [
          "(rpc) get_or_create_process_state"
        ]
      }
    },
    "/rpc/get_function_simple_info": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_function_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_function_simple_info"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_function_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_function_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_function_simple_info"
        ]
      }
    },
    "/rpc/begin_transaction": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) begin_transaction"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) begin_transaction"
        ]
      }
    },
    "/rpc/get_rpc_function_return_columns": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_function_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_rpc_function_return_columns"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_function_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_function_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_rpc_function_return_columns"
        ]
      }
    },
    "/rpc/create_missing_operator_assignments": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) create_missing_operator_assignments"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) create_missing_operator_assignments"
        ]
      }
    },
    "/rpc/user_has_permission": {
      "get": {
        "parameters": [
          {
            "format": "uuid",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "permission_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) user_has_permission"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "permission_name": {
                  "format": "text",
                  "type": "string"
                },
                "user_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "required": [
                "user_id",
                "permission_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) user_has_permission"
        ]
      }
    },
    "/rpc/get_table_type": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_table_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_type"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_table_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_table_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_type"
        ]
      }
    },
    "/rpc/get_table_indexes": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_schema_name",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_table_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_indexes"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_schema_name": {
                  "format": "text",
                  "type": "string"
                },
                "p_table_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_schema_name",
                "p_table_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_indexes"
        ]
      }
    },
    "/rpc/list_rpc_functions": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) list_rpc_functions"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) list_rpc_functions"
        ]
      }
    },
    "/rpc/get_generated_columns": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_schema_name",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_table_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_generated_columns"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_schema_name": {
                  "format": "text",
                  "type": "string"
                },
                "p_table_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_schema_name",
                "p_table_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_generated_columns"
        ]
      }
    },
    "/rpc/get_rpc_function_details": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_function_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_rpc_function_details"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_function_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_function_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_rpc_function_details"
        ]
      }
    },
    "/rpc/list_tables": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) list_tables"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) list_tables"
        ]
      }
    },
    "/rpc/rollback_transaction": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) rollback_transaction"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) rollback_transaction"
        ]
      }
    },
    "/rpc/get_table_constraints": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_schema_name",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_table_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_constraints"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_schema_name": {
                  "format": "text",
                  "type": "string"
                },
                "p_table_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_schema_name",
                "p_table_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) get_table_constraints"
        ]
      }
    }
  },
  "definitions": {
    "loop_step_config": {
      "description": "Configuration for loop-type recipe steps",
      "required": [
        "id",
        "step_id",
        "iteration_count",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "step_id": {
          "description": "Note:\nThis is a Foreign Key to `recipe_steps.id`.<fk table='recipe_steps' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "iteration_count": {
          "description": "Number of times to repeat the loop",
          "format": "integer",
          "type": "integer"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "experiments": {
      "required": [
        "id",
        "process_execution_id",
        "machine_id",
        "operator_id",
        "recipe_version",
        "start_time",
        "end_time",
        "status",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "process_execution_id": {
          "description": "Note:\nThis is a Foreign Key to `process_executions.id`.<fk table='process_executions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "operator_id": {
          "format": "uuid",
          "type": "string"
        },
        "recipe_version": {
          "format": "jsonb"
        },
        "start_time": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "end_time": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "status": {
          "format": "text",
          "type": "string"
        },
        "notes": {
          "format": "text",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "machine_health": {
      "description": "Real-time health monitoring data for machines including PLC and realtime connection status",
      "required": [
        "id",
        "machine_id"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "plc_connected": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "plc_last_check": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "plc_last_connected": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "plc_reconnect_attempts": {
          "default": 0,
          "format": "integer",
          "type": "integer"
        },
        "plc_error": {
          "format": "text",
          "type": "string"
        },
        "realtime_connected": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "realtime_last_check": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "realtime_last_message": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "realtime_error": {
          "format": "text",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "operator_sessions": {
      "required": [
        "id",
        "operator_id",
        "machine_id",
        "session_start_time",
        "session_status",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "reservation_id": {
          "description": "Note:\nThis is a Foreign Key to `slot_reservations.id`.<fk table='slot_reservations' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "operator_id": {
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "process_execution_id": {
          "description": "Note:\nThis is a Foreign Key to `process_executions.id`.<fk table='process_executions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "session_start_time": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "session_end_time": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "session_status": {
          "default": "active",
          "format": "text",
          "type": "string"
        },
        "last_heartbeat": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "grace_period_used_minutes": {
          "default": "0",
          "format": "integer",
          "type": "integer"
        },
        "is_extended": {
          "default": "false",
          "format": "boolean",
          "type": "boolean"
        },
        "extension_granted_until": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "user_machine_assignments": {
      "description": "Primary table for managing user assignments to machines. Consolidated from machine_assignments.",
      "required": [
        "id",
        "user_id",
        "machine_id"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "user_id": {
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "role": {
          "default": "operator",
          "format": "character varying",
          "maxLength": 50,
          "type": "string"
        },
        "assigned_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "assigned_by": {
          "format": "uuid",
          "type": "string"
        },
        "is_active": {
          "default": true,
          "format": "boolean",
          "type": "boolean"
        },
        "permissions": {
          "format": "jsonb"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "purge_step_config": {
      "description": "Configuration for purge-type recipe steps",
      "required": [
        "id",
        "step_id",
        "duration_ms",
        "gas_type",
        "flow_rate",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "step_id": {
          "description": "Note:\nThis is a Foreign Key to `recipe_steps.id`.<fk table='recipe_steps' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "duration_ms": {
          "description": "Duration of purge in milliseconds",
          "format": "integer",
          "type": "integer"
        },
        "gas_type": {
          "default": "N2",
          "description": "Type of gas used for purging (e.g., N2, Ar)",
          "format": "text",
          "type": "string"
        },
        "flow_rate": {
          "default": 100.0,
          "description": "Gas flow rate in sccm",
          "format": "numeric",
          "type": "number"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "command_responses": {
      "required": [
        "id",
        "response"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "response": {
          "format": "jsonb"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "command_id": {
          "description": "Note:\nThis is a Foreign Key to `recipe_commands.id`.<fk table='recipe_commands' column='id'/>",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "profiles": {
      "required": [
        "id",
        "role"
      ],
      "properties": {
        "id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "username": {
          "format": "text",
          "type": "string"
        },
        "email": {
          "format": "text",
          "type": "string"
        },
        "role": {
          "default": "operator",
          "format": "text",
          "type": "string"
        },
        "status": {
          "default": "active",
          "format": "text",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "role_id": {
          "description": "Note:\nThis is a Foreign Key to `user_roles.id`.<fk table='user_roles' column='id'/>",
          "format": "text",
          "type": "string"
        },
        "legacy_role": {
          "format": "text",
          "type": "string"
        },
        "migrated_at": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "full_name": {
          "format": "text",
          "type": "string"
        },
        "phone": {
          "format": "text",
          "type": "string"
        },
        "avatar_url": {
          "format": "text",
          "type": "string"
        }
      },
      "type": "object"
    },
    "machine_state": {
      "description": "Machine operational state - RLS enabled, users see assigned machines",
      "required": [
        "machine_id",
        "current_state",
        "state_since",
        "is_failure_mode",
        "updated_at"
      ],
      "properties": {
        "machine_id": {
          "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "current_state": {
          "default": "idle",
          "format": "character varying",
          "maxLength": 50,
          "type": "string"
        },
        "state_since": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "process_id": {
          "format": "uuid",
          "type": "string"
        },
        "is_failure_mode": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "failure_component": {
          "description": "Note:\nThis is a Foreign Key to `machine_components.id`.<fk table='machine_components' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "failure_description": {
          "format": "text",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "recipe_parameters": {
      "description": "Normalized recipe-level parameters (temperature, pressure, etc)",
      "required": [
        "id",
        "recipe_id",
        "parameter_name",
        "parameter_value"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "recipe_id": {
          "description": "Note:\nThis is a Foreign Key to `recipes.id`.<fk table='recipes' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "parameter_name": {
          "format": "text",
          "type": "string"
        },
        "parameter_value": {
          "format": "numeric",
          "type": "number"
        },
        "parameter_unit": {
          "format": "text",
          "type": "string"
        },
        "parameter_type": {
          "format": "text",
          "type": "string"
        },
        "min_value": {
          "format": "numeric",
          "type": "number"
        },
        "max_value": {
          "format": "numeric",
          "type": "number"
        },
        "is_critical": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "tolerance_percentage": {
          "format": "numeric",
          "type": "number"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "recipe_commands": {
      "description": "Recipe execution commands - RLS enabled, machine assignment based access",
      "required": [
        "type",
        "status",
        "id"
      ],
      "properties": {
        "type": {
          "format": "character varying",
          "maxLength": 50,
          "type": "string"
        },
        "parameters": {
          "format": "jsonb"
        },
        "status": {
          "default": "pending",
          "format": "character varying",
          "maxLength": 20,
          "type": "string"
        },
        "created_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "executed_at": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "error_message": {
          "format": "text",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "recipe_step_id": {
          "description": "Foreign key reference to recipe_steps.id - links commands to specific recipe steps for config integration\n\nNote:\nThis is a Foreign Key to `recipe_steps.id`.<fk table='recipe_steps' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "maintenance_records": {
      "description": "Maintenance records - RLS enabled, users see assigned machines",
      "required": [
        "id",
        "machine_id",
        "component_id",
        "performed_by",
        "maintenance_type",
        "performed_at",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "schedule_id": {
          "description": "Note:\nThis is a Foreign Key to `maintenance_schedule.id`.<fk table='maintenance_schedule' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "component_id": {
          "description": "Note:\nThis is a Foreign Key to `machine_components.id`.<fk table='machine_components' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "performed_by": {
          "format": "uuid",
          "type": "string"
        },
        "maintenance_type": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "performed_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "next_maintenance_date": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "notes": {
          "format": "text",
          "type": "string"
        },
        "attachments": {
          "format": "jsonb"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "parameter_value_history": {
      "description": "Continuous time-series history of parameter value changes for monitoring and trending, independent of recipe execution state",
      "required": [
        "id",
        "parameter_id",
        "value",
        "timestamp",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "parameter_id": {
          "description": "Reference to component parameter being tracked\n\nNote:\nThis is a Foreign Key to `component_parameters.id`.<fk table='component_parameters' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "value": {
          "description": "Actual measured/current value at this timestamp",
          "format": "double precision",
          "type": "number"
        },
        "set_point": {
          "description": "Target/setpoint value if applicable",
          "format": "double precision",
          "type": "number"
        },
        "timestamp": {
          "default": "now()",
          "description": "When this value was recorded",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "maintenance_schedule": {
      "description": "Maintenance schedule - RLS enabled, users see assigned machines",
      "required": [
        "id",
        "machine_id",
        "maintenance_type",
        "frequency_days",
        "next_due",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "component_id": {
          "description": "Note:\nThis is a Foreign Key to `machine_components.id`.<fk table='machine_components' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "maintenance_type": {
          "format": "text",
          "type": "string"
        },
        "frequency_days": {
          "format": "integer",
          "type": "integer"
        },
        "last_performed": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "next_due": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "valve_step_config": {
      "description": "Configuration for valve-type recipe steps",
      "required": [
        "id",
        "step_id",
        "valve_id",
        "valve_number",
        "duration_ms",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "step_id": {
          "description": "Note:\nThis is a Foreign Key to `recipe_steps.id`.<fk table='recipe_steps' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "valve_id": {
          "description": "Identifier of the valve (e.g., valve_1, valve_2)",
          "format": "text",
          "type": "string"
        },
        "valve_number": {
          "description": "Numeric valve number for display",
          "format": "integer",
          "type": "integer"
        },
        "duration_ms": {
          "description": "Duration to keep valve open in milliseconds",
          "format": "integer",
          "type": "integer"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "machine_components": {
      "description": "Machine components - RLS enabled, users see assigned machines",
      "required": [
        "id",
        "machine_id",
        "name",
        "type",
        "is_activated",
        "created_at",
        "updated_at",
        "is_persistent",
        "definition_id"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "format": "text",
          "type": "string"
        },
        "type": {
          "format": "text",
          "type": "string"
        },
        "is_activated": {
          "default": true,
          "format": "boolean",
          "type": "boolean"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "is_persistent": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "definition_id": {
          "description": "Note:\nThis is a Foreign Key to `component_definitions.id`.<fk table='component_definitions' column='id'/>",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "machines": {
      "required": [
        "id",
        "serial_number",
        "location",
        "lab_name",
        "lab_institution",
        "model",
        "machine_type",
        "install_date",
        "status",
        "last_maintenance_date",
        "admin_id",
        "is_active",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "serial_number": {
          "format": "text",
          "type": "string"
        },
        "location": {
          "format": "text",
          "type": "string"
        },
        "lab_name": {
          "format": "text",
          "type": "string"
        },
        "lab_institution": {
          "format": "text",
          "type": "string"
        },
        "model": {
          "format": "text",
          "type": "string"
        },
        "machine_type": {
          "description": "Standard machine types: atomic_layer_deposition, chemical_vapor_deposition, physical_vapor_deposition, etching, lithography",
          "format": "text",
          "type": "string"
        },
        "install_date": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "status": {
          "default": "offline",
          "format": "text",
          "type": "string"
        },
        "current_operator_id": {
          "format": "uuid",
          "type": "string"
        },
        "last_maintenance_date": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "admin_id": {
          "format": "uuid",
          "type": "string"
        },
        "is_active": {
          "default": true,
          "format": "boolean",
          "type": "boolean"
        },
        "current_process_id": {
          "description": "Note:\nThis is a Foreign Key to `process_executions.id`.<fk table='process_executions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "is_virtual": {
          "default": false,
          "description": "Flag to indicate if this machine is virtual (simulated) or real",
          "format": "boolean",
          "type": "boolean"
        },
        "virtual_config": {
          "description": "Configuration for virtual machine behavior including data generation parameters",
          "format": "jsonb"
        }
      },
      "type": "object"
    },
    "recipe_steps": {
      "description": "Recipe steps table - parameters now stored in type-specific config tables (valve_step_config, purge_step_config, loop_step_config)",
      "required": [
        "id",
        "recipe_id",
        "sequence_number",
        "name",
        "type",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "recipe_id": {
          "description": "Note:\nThis is a Foreign Key to `recipes.id`.<fk table='recipes' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "sequence_number": {
          "format": "integer",
          "type": "integer"
        },
        "name": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "type": {
          "format": "text",
          "type": "string"
        },
        "parent_step_id": {
          "description": "Note:\nThis is a Foreign Key to `recipe_steps.id`.<fk table='recipe_steps' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "process_execution_state": {
      "description": "Normalized process execution state - separated from main execution table for performance and better data organization",
      "required": [
        "id",
        "execution_id"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "execution_id": {
          "description": "Links to process_executions.id - enforces one state record per execution\n\nNote:\nThis is a Foreign Key to `process_executions.id`.<fk table='process_executions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "current_step_index": {
          "default": 0,
          "description": "Current position in the process step array",
          "format": "integer",
          "type": "integer"
        },
        "current_overall_step": {
          "default": 0,
          "description": "Overall step count across all loops and iterations",
          "format": "integer",
          "type": "integer"
        },
        "total_overall_steps": {
          "description": "Total number of steps to be executed",
          "format": "integer",
          "type": "integer"
        },
        "current_step": {
          "description": "JSONB representation of the current step being executed",
          "format": "jsonb"
        },
        "current_step_type": {
          "description": "Type of current step (valve, parameter, loop, etc.)",
          "format": "text",
          "type": "string"
        },
        "current_step_name": {
          "description": "Human-readable name of current step",
          "format": "text",
          "type": "string"
        },
        "current_valve_number": {
          "description": "Currently active valve number",
          "format": "integer",
          "type": "integer"
        },
        "current_valve_duration_ms": {
          "description": "Duration in ms for current valve operation",
          "format": "integer",
          "type": "integer"
        },
        "current_purge_duration_ms": {
          "description": "Duration in ms for current purge operation",
          "format": "integer",
          "type": "integer"
        },
        "current_parameter_id": {
          "description": "Reference to component parameter being adjusted\n\nNote:\nThis is a Foreign Key to `component_parameters.id`.<fk table='component_parameters' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "current_parameter_value": {
          "description": "Current value of parameter being adjusted",
          "format": "numeric",
          "type": "number"
        },
        "current_loop_count": {
          "description": "Total number of loops to execute",
          "format": "integer",
          "type": "integer"
        },
        "current_loop_iteration": {
          "description": "Current loop iteration number",
          "format": "integer",
          "type": "integer"
        },
        "progress": {
          "description": "JSONB tracking completion metrics and progress indicators",
          "format": "jsonb"
        },
        "process_metrics": {
          "description": "JSONB with performance metrics, timing, and statistics",
          "format": "jsonb"
        },
        "last_updated": {
          "default": "now()",
          "description": "Timestamp of last state update",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "description": "Timestamp when state record was created",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "component_parameters": {
      "description": "Component parameters table updated with correct modbus addresses for MACHINE-001 - binary parameters use same address for read/write, analog parameters have distinct read/write addresses",
      "required": [
        "id",
        "component_id",
        "min_value",
        "max_value",
        "current_value",
        "created_at",
        "updated_at",
        "show_in_graph",
        "is_writable",
        "show_in_ui"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "component_id": {
          "description": "Note:\nThis is a Foreign Key to `machine_components.id`.<fk table='machine_components' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "min_value": {
          "format": "double precision",
          "type": "number"
        },
        "max_value": {
          "format": "double precision",
          "type": "number"
        },
        "current_value": {
          "description": "Current sensor reading - actual measured value from hardware",
          "format": "double precision",
          "type": "number"
        },
        "set_value": {
          "description": "Setpoint value for writable parameters - the target value operators want to achieve",
          "format": "double precision",
          "type": "number"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "show_in_graph": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "is_writable": {
          "default": false,
          "description": "True for setpoint parameters (temperature, flow), false for sensor readings (pressure, status)",
          "format": "boolean",
          "type": "boolean"
        },
        "modbus_address": {
          "description": "Legacy single modbus address - use read_modbus_address and write_modbus_address instead",
          "format": "integer",
          "type": "integer"
        },
        "modbus_type": {
          "description": "Legacy modbus type - use read_modbus_type and write_modbus_type instead",
          "enum": [
            "holding_register",
            "input_register",
            "coil",
            "discrete_input"
          ],
          "format": "public.modbus_type",
          "type": "string"
        },
        "data_type": {
          "enum": [
            "float",
            "int32",
            "int16",
            "binary"
          ],
          "format": "public.data_type",
          "type": "string"
        },
        "show_in_ui": {
          "default": true,
          "format": "boolean",
          "type": "boolean"
        },
        "definition_id": {
          "description": "References component_parameter_definitions for name, unit, description\n\nNote:\nThis is a Foreign Key to `component_parameter_definitions.id`.<fk table='component_parameter_definitions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "read_modbus_address": {
          "description": "Modbus address for reading current sensor value (input_register)",
          "format": "integer",
          "type": "integer"
        },
        "read_modbus_type": {
          "description": "Modbus register type for reading current values",
          "enum": [
            "holding_register",
            "input_register",
            "coil",
            "discrete_input"
          ],
          "format": "public.modbus_type",
          "type": "string"
        },
        "write_modbus_address": {
          "description": "Modbus address for writing setpoint value (holding_register)",
          "format": "integer",
          "type": "integer"
        },
        "write_modbus_type": {
          "description": "Modbus register type for writing setpoints",
          "enum": [
            "holding_register",
            "input_register",
            "coil",
            "discrete_input"
          ],
          "format": "public.modbus_type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "process_data_points": {
      "description": "Process sensor data - RLS enabled, users see own process data",
      "required": [
        "id",
        "process_id",
        "parameter_id",
        "value",
        "timestamp",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "process_id": {
          "description": "Note:\nThis is a Foreign Key to `process_executions.id`.<fk table='process_executions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "parameter_id": {
          "description": "Note:\nThis is a Foreign Key to `component_parameters.id`.<fk table='component_parameters' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "value": {
          "format": "double precision",
          "type": "number"
        },
        "set_point": {
          "format": "double precision",
          "type": "number"
        },
        "timestamp": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "component_definitions": {
      "description": "Component type definitions - RLS enabled, public read, admin write",
      "required": [
        "id",
        "name",
        "type",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "format": "text",
          "type": "string"
        },
        "type": {
          "format": "text",
          "type": "string"
        },
        "default_parameters": {
          "format": "jsonb"
        },
        "vendor": {
          "format": "text",
          "type": "string"
        },
        "part_number": {
          "format": "text",
          "type": "string"
        },
        "datasheet_url": {
          "format": "text",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "migration_audit": {
      "required": [
        "id",
        "migration_name",
        "executed_at",
        "records_affected"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "migration_name": {
          "format": "text",
          "type": "string"
        },
        "executed_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "records_affected": {
          "format": "jsonb"
        }
      },
      "type": "object"
    },
    "user_roles": {
      "required": [
        "id",
        "name",
        "display_name",
        "hierarchy_level",
        "permissions",
        "is_active",
        "created_at"
      ],
      "properties": {
        "id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "text",
          "type": "string"
        },
        "name": {
          "format": "text",
          "type": "string"
        },
        "display_name": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "hierarchy_level": {
          "default": 0,
          "format": "integer",
          "type": "integer"
        },
        "permissions": {
          "format": "jsonb"
        },
        "is_active": {
          "default": true,
          "format": "boolean",
          "type": "boolean"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "experiment_metadata": {
      "description": "Experiment metadata - RLS enabled, users see own experiments",
      "required": [
        "id",
        "experiment_id",
        "parameter_tolerances",
        "quality_threshold",
        "parameter_units",
        "substrate_info",
        "environmental_conditions",
        "equipment_settings",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "experiment_id": {
          "description": "Note:\nThis is a Foreign Key to `experiments.id`.<fk table='experiments' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "parameter_tolerances": {
          "format": "jsonb"
        },
        "quality_threshold": {
          "format": "double precision",
          "type": "number"
        },
        "parameter_units": {
          "format": "jsonb"
        },
        "substrate_info": {
          "format": "jsonb"
        },
        "environmental_conditions": {
          "format": "jsonb"
        },
        "equipment_settings": {
          "format": "jsonb"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "component_parameter_definitions": {
      "description": "Parameter definitions for components - RLS enabled, public read, admin write",
      "required": [
        "id",
        "component_definition_id",
        "name",
        "is_writable",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "component_definition_id": {
          "description": "Note:\nThis is a Foreign Key to `component_definitions.id`.<fk table='component_definitions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "unit": {
          "format": "text",
          "type": "string"
        },
        "default_min": {
          "format": "double precision",
          "type": "number"
        },
        "default_max": {
          "format": "double precision",
          "type": "number"
        },
        "is_writable": {
          "default": true,
          "format": "boolean",
          "type": "boolean"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "parameter_step_config": {
      "description": "Configuration for parameter-type recipe steps",
      "required": [
        "id",
        "step_id",
        "parameter_id",
        "target_value"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "step_id": {
          "description": "Note:\nThis is a Foreign Key to `recipe_steps.id`.<fk table='recipe_steps' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "parameter_id": {
          "description": "Reference to the component parameter to adjust\n\nNote:\nThis is a Foreign Key to `component_parameters.id`.<fk table='component_parameters' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "target_value": {
          "description": "Target value to set the parameter to",
          "format": "numeric",
          "type": "number"
        },
        "adjustment_rate": {
          "default": 1.0,
          "description": "Rate of parameter adjustment (units per second)",
          "format": "numeric",
          "type": "number"
        },
        "hold_duration_ms": {
          "default": 1000,
          "description": "Duration to hold parameter at target value in milliseconds",
          "format": "integer",
          "type": "integer"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "recipes": {
      "required": [
        "id",
        "name",
        "version",
        "is_public",
        "created_by",
        "machine_type",
        "chamber_temperature_set_point",
        "pressure_set_point",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "version": {
          "default": 1,
          "format": "integer",
          "type": "integer"
        },
        "is_public": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "created_by": {
          "format": "uuid",
          "type": "string"
        },
        "machine_type": {
          "format": "text",
          "type": "string"
        },
        "substrate": {
          "format": "text",
          "type": "string"
        },
        "chamber_temperature_set_point": {
          "format": "double precision",
          "type": "number"
        },
        "pressure_set_point": {
          "format": "double precision",
          "type": "number"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "virtual_machine_server_status": {
      "required": [
        "id",
        "status"
      ],
      "properties": {
        "id": {
          "default": "primary",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "text",
          "type": "string"
        },
        "status": {
          "default": "offline",
          "format": "text",
          "type": "string"
        },
        "last_ping": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "metadata": {
          "format": "jsonb"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "app_settings": {
      "description": "Application configuration settings - RLS enabled, admin-only with selective public reads",
      "required": [
        "key",
        "value",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "key": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "text",
          "type": "string"
        },
        "value": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "experiment_results": {
      "description": "Experiment results - RLS enabled, users see own experiments",
      "required": [
        "id",
        "experiment_id",
        "quality_metrics",
        "parameter_deviations",
        "observations",
        "recommendations",
        "measurements",
        "quality_score",
        "critical_deviations",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "experiment_id": {
          "description": "Note:\nThis is a Foreign Key to `experiments.id`.<fk table='experiments' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "quality_metrics": {
          "format": "jsonb"
        },
        "parameter_deviations": {
          "format": "jsonb"
        },
        "observations": {
          "format": "text[]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "recommendations": {
          "format": "jsonb"
        },
        "measurements": {
          "format": "jsonb"
        },
        "quality_score": {
          "format": "double precision",
          "type": "number"
        },
        "critical_deviations": {
          "format": "text[]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "user_machine_preferences": {
      "required": [
        "id",
        "user_id"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "user_id": {
          "format": "uuid",
          "type": "string"
        },
        "current_machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "last_switched_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "preferences": {
          "format": "jsonb"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "recipe_step_configs_archive": {
      "properties": {
        "step_id": {
          "format": "text",
          "type": "string"
        },
        "recipe_id": {
          "format": "text",
          "type": "string"
        },
        "sequence_number": {
          "format": "integer",
          "type": "integer"
        },
        "step_name": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "step_type": {
          "format": "text",
          "type": "string"
        },
        "parent_step_id": {
          "format": "text",
          "type": "string"
        },
        "created_at": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "config": {
          "format": "jsonb"
        },
        "archived_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "archive_reason": {
          "default": "migration_cleanup",
          "format": "text",
          "type": "string"
        },
        "original_table_name": {
          "default": "recipe_step_configs",
          "format": "text",
          "type": "string"
        }
      },
      "type": "object"
    },
    "process_executions": {
      "description": "Core process execution records - state tracked in process_execution_state table",
      "required": [
        "id",
        "session_id",
        "machine_id",
        "recipe_id",
        "recipe_version",
        "start_time",
        "operator_id",
        "status",
        "parameters",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "default": "extensions.uuid_generate_v4()",
          "description": "Primary key - referenced by process_execution_state.execution_id for state tracking\n\nNote:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "session_id": {
          "description": "Note:\nThis is a Foreign Key to `operator_sessions.id`.<fk table='operator_sessions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "recipe_id": {
          "description": "Note:\nThis is a Foreign Key to `recipes.id`.<fk table='recipes' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "recipe_version": {
          "format": "jsonb"
        },
        "start_time": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "end_time": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "operator_id": {
          "format": "uuid",
          "type": "string"
        },
        "status": {
          "enum": [
            "preparing",
            "running",
            "paused",
            "completed",
            "failed",
            "aborted"
          ],
          "format": "public.process_status",
          "type": "string"
        },
        "parameters": {
          "format": "jsonb"
        },
        "error_message": {
          "format": "text",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        }
      },
      "type": "object"
    },
    "step_execution_history": {
      "required": [
        "id",
        "process_id",
        "step_number",
        "step_type"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "process_id": {
          "description": "Note:\nThis is a Foreign Key to `process_executions.id`.<fk table='process_executions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "step_number": {
          "format": "integer",
          "type": "integer"
        },
        "step_type": {
          "format": "text",
          "type": "string"
        },
        "step_name": {
          "format": "text",
          "type": "string"
        },
        "started_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "ended_at": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "parameters": {
          "format": "jsonb"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "parameter_control_commands": {
      "description": "Commands for testing parameter control from control channel to machine via pymodbus",
      "required": [
        "id",
        "parameter_name",
        "target_value",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "parameter_name": {
          "description": "Human readable parameter name (e.g., pump_1, nitrogen_generator, mfc_1)",
          "format": "text",
          "type": "string"
        },
        "target_value": {
          "description": "Target value to set (1/0 for binary, actual value for numeric)",
          "format": "numeric",
          "type": "number"
        },
        "modbus_address": {
          "description": "Modbus address for this parameter",
          "format": "integer",
          "type": "integer"
        },
        "modbus_type": {
          "description": "Modbus register type",
          "format": "text",
          "type": "string"
        },
        "machine_id": {
          "description": "Machine this command belongs to\n\nNote:\nThis is a Foreign Key to `machines.id`.<fk table='machines' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "executed_at": {
          "description": "When the command was executed",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "completed_at": {
          "description": "When the command completed",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "error_message": {
          "description": "Error details if execution failed",
          "format": "text",
          "type": "string"
        },
        "timeout_ms": {
          "default": 30000,
          "description": "Command timeout in milliseconds",
          "format": "integer",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "component_parameters_full": {
      "description": "Full component parameters view with all modbus columns including read/write distinctions for parameter control and monitoring",
      "properties": {
        "id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "component_id": {
          "description": "Note:\nThis is a Foreign Key to `machine_components.id`.<fk table='machine_components' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "definition_id": {
          "description": "Note:\nThis is a Foreign Key to `component_parameter_definitions.id`.<fk table='component_parameter_definitions' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "parameter_name": {
          "format": "text",
          "type": "string"
        },
        "description": {
          "format": "text",
          "type": "string"
        },
        "unit": {
          "format": "text",
          "type": "string"
        },
        "min_value": {
          "format": "double precision",
          "type": "number"
        },
        "max_value": {
          "format": "double precision",
          "type": "number"
        },
        "current_value": {
          "format": "double precision",
          "type": "number"
        },
        "set_value": {
          "format": "double precision",
          "type": "number"
        },
        "show_in_graph": {
          "format": "boolean",
          "type": "boolean"
        },
        "is_writable": {
          "format": "boolean",
          "type": "boolean"
        },
        "show_in_ui": {
          "format": "boolean",
          "type": "boolean"
        },
        "modbus_address": {
          "format": "integer",
          "type": "integer"
        },
        "modbus_type": {
          "enum": [
            "holding_register",
            "input_register",
            "coil",
            "discrete_input"
          ],
          "format": "public.modbus_type",
          "type": "string"
        },
        "data_type": {
          "enum": [
            "float",
            "int32",
            "int16",
            "binary"
          ],
          "format": "public.data_type",
          "type": "string"
        },
        "read_modbus_address": {
          "format": "integer",
          "type": "integer"
        },
        "read_modbus_type": {
          "enum": [
            "holding_register",
            "input_register",
            "coil",
            "discrete_input"
          ],
          "format": "public.modbus_type",
          "type": "string"
        },
        "write_modbus_address": {
          "format": "integer",
          "type": "integer"
        },
        "write_modbus_type": {
          "enum": [
            "holding_register",
            "input_register",
            "coil",
            "discrete_input"
          ],
          "format": "public.modbus_type",
          "type": "string"
        },
        "component_name": {
          "format": "text",
          "type": "string"
        },
        "component_type": {
          "format": "text",
          "type": "string"
        },
        "machine_serial": {
          "format": "text",
          "type": "string"
        },
        "machine_id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "created_at": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "preferParams": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "params=single-object"
      ],
      "in": "header",
      "type": "string"
    },
    "preferReturn": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferCount": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "count=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferPost": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none",
        "resolution=ignore-duplicates",
        "resolution=merge-duplicates"
      ],
      "in": "header",
      "type": "string"
    },
    "select": {
      "name": "select",
      "description": "Filtering Columns",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "on_conflict": {
      "name": "on_conflict",
      "description": "On Conflict",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "order": {
      "name": "order",
      "description": "Ordering",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "range": {
      "name": "Range",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "rangeUnit": {
      "name": "Range-Unit",
      "description": "Limiting and Pagination",
      "required": false,
      "default": "items",
      "in": "header",
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "limit": {
      "name": "limit",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.loop_step_config": {
      "name": "loop_step_config",
      "description": "loop_step_config",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/loop_step_config"
      }
    },
    "rowFilter.loop_step_config.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.loop_step_config.step_id": {
      "name": "step_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.loop_step_config.iteration_count": {
      "name": "iteration_count",
      "description": "Number of times to repeat the loop",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.loop_step_config.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.loop_step_config.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.experiments": {
      "name": "experiments",
      "description": "experiments",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/experiments"
      }
    },
    "rowFilter.experiments.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.process_execution_id": {
      "name": "process_execution_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.operator_id": {
      "name": "operator_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.recipe_version": {
      "name": "recipe_version",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.start_time": {
      "name": "start_time",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.end_time": {
      "name": "end_time",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.status": {
      "name": "status",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.notes": {
      "name": "notes",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiments.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.machine_health": {
      "name": "machine_health",
      "description": "machine_health",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/machine_health"
      }
    },
    "rowFilter.machine_health.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.plc_connected": {
      "name": "plc_connected",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.plc_last_check": {
      "name": "plc_last_check",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.plc_last_connected": {
      "name": "plc_last_connected",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.plc_reconnect_attempts": {
      "name": "plc_reconnect_attempts",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.plc_error": {
      "name": "plc_error",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.realtime_connected": {
      "name": "realtime_connected",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.realtime_last_check": {
      "name": "realtime_last_check",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.realtime_last_message": {
      "name": "realtime_last_message",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.realtime_error": {
      "name": "realtime_error",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_health.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.operator_sessions": {
      "name": "operator_sessions",
      "description": "operator_sessions",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/operator_sessions"
      }
    },
    "rowFilter.operator_sessions.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.operator_id": {
      "name": "operator_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.session_start_time": {
      "name": "session_start_time",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.session_end_time": {
      "name": "session_end_time",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.session_status": {
      "name": "session_status",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.reservation_id": {
      "name": "reservation_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.process_execution_id": {
      "name": "process_execution_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.last_heartbeat": {
      "name": "last_heartbeat",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.grace_period_used_minutes": {
      "name": "grace_period_used_minutes",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "rowFilter.operator_sessions.is_extended": {
      "name": "is_extended",
      "required": false,
      "in": "query",
      "type": "boolean"
    },
    "rowFilter.operator_sessions.extension_granted_until": {
      "name": "extension_granted_until",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.operator_sessions.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.user_machine_assignments": {
      "name": "user_machine_assignments",
      "description": "user_machine_assignments",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/user_machine_assignments"
      }
    },
    "rowFilter.user_machine_assignments.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.user_id": {
      "name": "user_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.role": {
      "name": "role",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.assigned_at": {
      "name": "assigned_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.assigned_by": {
      "name": "assigned_by",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.is_active": {
      "name": "is_active",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.permissions": {
      "name": "permissions",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_assignments.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.purge_step_config": {
      "name": "purge_step_config",
      "description": "purge_step_config",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/purge_step_config"
      }
    },
    "rowFilter.purge_step_config.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.purge_step_config.step_id": {
      "name": "step_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.purge_step_config.duration_ms": {
      "name": "duration_ms",
      "description": "Duration of purge in milliseconds",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.purge_step_config.gas_type": {
      "name": "gas_type",
      "description": "Type of gas used for purging (e.g., N2, Ar)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.purge_step_config.flow_rate": {
      "name": "flow_rate",
      "description": "Gas flow rate in sccm",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.purge_step_config.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.purge_step_config.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.command_responses": {
      "name": "command_responses",
      "description": "command_responses",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/command_responses"
      }
    },
    "rowFilter.command_responses.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.command_responses.response": {
      "name": "response",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.command_responses.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.command_responses.command_id": {
      "name": "command_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.profiles": {
      "name": "profiles",
      "description": "profiles",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/profiles"
      }
    },
    "rowFilter.profiles.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.username": {
      "name": "username",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.email": {
      "name": "email",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.role": {
      "name": "role",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.status": {
      "name": "status",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.role_id": {
      "name": "role_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.legacy_role": {
      "name": "legacy_role",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.migrated_at": {
      "name": "migrated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.full_name": {
      "name": "full_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.phone": {
      "name": "phone",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.profiles.avatar_url": {
      "name": "avatar_url",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.machine_state": {
      "name": "machine_state",
      "description": "machine_state",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/machine_state"
      }
    },
    "rowFilter.machine_state.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_state.current_state": {
      "name": "current_state",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_state.state_since": {
      "name": "state_since",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_state.process_id": {
      "name": "process_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_state.is_failure_mode": {
      "name": "is_failure_mode",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_state.failure_component": {
      "name": "failure_component",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_state.failure_description": {
      "name": "failure_description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_state.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.recipe_parameters": {
      "name": "recipe_parameters",
      "description": "recipe_parameters",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/recipe_parameters"
      }
    },
    "rowFilter.recipe_parameters.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.recipe_id": {
      "name": "recipe_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.parameter_name": {
      "name": "parameter_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.parameter_value": {
      "name": "parameter_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.parameter_unit": {
      "name": "parameter_unit",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.parameter_type": {
      "name": "parameter_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.min_value": {
      "name": "min_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.max_value": {
      "name": "max_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.is_critical": {
      "name": "is_critical",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.tolerance_percentage": {
      "name": "tolerance_percentage",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_parameters.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.recipe_commands": {
      "name": "recipe_commands",
      "description": "recipe_commands",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/recipe_commands"
      }
    },
    "rowFilter.recipe_commands.type": {
      "name": "type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.parameters": {
      "name": "parameters",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.status": {
      "name": "status",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.executed_at": {
      "name": "executed_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.error_message": {
      "name": "error_message",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.recipe_step_id": {
      "name": "recipe_step_id",
      "description": "Foreign key reference to recipe_steps.id - links commands to specific recipe steps for config integration",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_commands.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.maintenance_records": {
      "name": "maintenance_records",
      "description": "maintenance_records",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/maintenance_records"
      }
    },
    "rowFilter.maintenance_records.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.schedule_id": {
      "name": "schedule_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.component_id": {
      "name": "component_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.performed_by": {
      "name": "performed_by",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.maintenance_type": {
      "name": "maintenance_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.performed_at": {
      "name": "performed_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.next_maintenance_date": {
      "name": "next_maintenance_date",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.notes": {
      "name": "notes",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.attachments": {
      "name": "attachments",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_records.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.parameter_value_history": {
      "name": "parameter_value_history",
      "description": "parameter_value_history",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/parameter_value_history"
      }
    },
    "rowFilter.parameter_value_history.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_value_history.parameter_id": {
      "name": "parameter_id",
      "description": "Reference to component parameter being tracked",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_value_history.value": {
      "name": "value",
      "description": "Actual measured/current value at this timestamp",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_value_history.set_point": {
      "name": "set_point",
      "description": "Target/setpoint value if applicable",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_value_history.timestamp": {
      "name": "timestamp",
      "description": "When this value was recorded",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_value_history.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.maintenance_schedule": {
      "name": "maintenance_schedule",
      "description": "maintenance_schedule",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/maintenance_schedule"
      }
    },
    "rowFilter.maintenance_schedule.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.component_id": {
      "name": "component_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.maintenance_type": {
      "name": "maintenance_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.frequency_days": {
      "name": "frequency_days",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.last_performed": {
      "name": "last_performed",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.next_due": {
      "name": "next_due",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.maintenance_schedule.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.valve_step_config": {
      "name": "valve_step_config",
      "description": "valve_step_config",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/valve_step_config"
      }
    },
    "rowFilter.valve_step_config.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.valve_step_config.step_id": {
      "name": "step_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.valve_step_config.valve_id": {
      "name": "valve_id",
      "description": "Identifier of the valve (e.g., valve_1, valve_2)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.valve_step_config.valve_number": {
      "name": "valve_number",
      "description": "Numeric valve number for display",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.valve_step_config.duration_ms": {
      "name": "duration_ms",
      "description": "Duration to keep valve open in milliseconds",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.valve_step_config.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.valve_step_config.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.machine_components": {
      "name": "machine_components",
      "description": "machine_components",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/machine_components"
      }
    },
    "rowFilter.machine_components.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.name": {
      "name": "name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.type": {
      "name": "type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.is_activated": {
      "name": "is_activated",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.is_persistent": {
      "name": "is_persistent",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machine_components.definition_id": {
      "name": "definition_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.machines": {
      "name": "machines",
      "description": "machines",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/machines"
      }
    },
    "rowFilter.machines.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.serial_number": {
      "name": "serial_number",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.location": {
      "name": "location",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.lab_name": {
      "name": "lab_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.lab_institution": {
      "name": "lab_institution",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.model": {
      "name": "model",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.machine_type": {
      "name": "machine_type",
      "description": "Standard machine types: atomic_layer_deposition, chemical_vapor_deposition, physical_vapor_deposition, etching, lithography",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.install_date": {
      "name": "install_date",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.status": {
      "name": "status",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.current_operator_id": {
      "name": "current_operator_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.last_maintenance_date": {
      "name": "last_maintenance_date",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.admin_id": {
      "name": "admin_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.is_active": {
      "name": "is_active",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.current_process_id": {
      "name": "current_process_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.is_virtual": {
      "name": "is_virtual",
      "description": "Flag to indicate if this machine is virtual (simulated) or real",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.machines.virtual_config": {
      "name": "virtual_config",
      "description": "Configuration for virtual machine behavior including data generation parameters",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.recipe_steps": {
      "name": "recipe_steps",
      "description": "recipe_steps",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/recipe_steps"
      }
    },
    "rowFilter.recipe_steps.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_steps.recipe_id": {
      "name": "recipe_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_steps.sequence_number": {
      "name": "sequence_number",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_steps.name": {
      "name": "name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_steps.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_steps.type": {
      "name": "type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_steps.parent_step_id": {
      "name": "parent_step_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_steps.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.process_execution_state": {
      "name": "process_execution_state",
      "description": "process_execution_state",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/process_execution_state"
      }
    },
    "rowFilter.process_execution_state.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.execution_id": {
      "name": "execution_id",
      "description": "Links to process_executions.id - enforces one state record per execution",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_step_index": {
      "name": "current_step_index",
      "description": "Current position in the process step array",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_overall_step": {
      "name": "current_overall_step",
      "description": "Overall step count across all loops and iterations",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.total_overall_steps": {
      "name": "total_overall_steps",
      "description": "Total number of steps to be executed",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_step": {
      "name": "current_step",
      "description": "JSONB representation of the current step being executed",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_step_type": {
      "name": "current_step_type",
      "description": "Type of current step (valve, parameter, loop, etc.)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_step_name": {
      "name": "current_step_name",
      "description": "Human-readable name of current step",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_valve_number": {
      "name": "current_valve_number",
      "description": "Currently active valve number",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_valve_duration_ms": {
      "name": "current_valve_duration_ms",
      "description": "Duration in ms for current valve operation",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_purge_duration_ms": {
      "name": "current_purge_duration_ms",
      "description": "Duration in ms for current purge operation",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_parameter_id": {
      "name": "current_parameter_id",
      "description": "Reference to component parameter being adjusted",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_parameter_value": {
      "name": "current_parameter_value",
      "description": "Current value of parameter being adjusted",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_loop_count": {
      "name": "current_loop_count",
      "description": "Total number of loops to execute",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.current_loop_iteration": {
      "name": "current_loop_iteration",
      "description": "Current loop iteration number",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.progress": {
      "name": "progress",
      "description": "JSONB tracking completion metrics and progress indicators",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.process_metrics": {
      "name": "process_metrics",
      "description": "JSONB with performance metrics, timing, and statistics",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.last_updated": {
      "name": "last_updated",
      "description": "Timestamp of last state update",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_execution_state.created_at": {
      "name": "created_at",
      "description": "Timestamp when state record was created",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.component_parameters": {
      "name": "component_parameters",
      "description": "component_parameters",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/component_parameters"
      }
    },
    "rowFilter.component_parameters.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.component_id": {
      "name": "component_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.min_value": {
      "name": "min_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.max_value": {
      "name": "max_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.current_value": {
      "name": "current_value",
      "description": "Current sensor reading - actual measured value from hardware",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.set_value": {
      "name": "set_value",
      "description": "Setpoint value for writable parameters - the target value operators want to achieve",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.show_in_graph": {
      "name": "show_in_graph",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.is_writable": {
      "name": "is_writable",
      "description": "True for setpoint parameters (temperature, flow), false for sensor readings (pressure, status)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.modbus_address": {
      "name": "modbus_address",
      "description": "Legacy single modbus address - use read_modbus_address and write_modbus_address instead",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.modbus_type": {
      "name": "modbus_type",
      "description": "Legacy modbus type - use read_modbus_type and write_modbus_type instead",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.data_type": {
      "name": "data_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.show_in_ui": {
      "name": "show_in_ui",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.definition_id": {
      "name": "definition_id",
      "description": "References component_parameter_definitions for name, unit, description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.read_modbus_address": {
      "name": "read_modbus_address",
      "description": "Modbus address for reading current sensor value (input_register)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.read_modbus_type": {
      "name": "read_modbus_type",
      "description": "Modbus register type for reading current values",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.write_modbus_address": {
      "name": "write_modbus_address",
      "description": "Modbus address for writing setpoint value (holding_register)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters.write_modbus_type": {
      "name": "write_modbus_type",
      "description": "Modbus register type for writing setpoints",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.process_data_points": {
      "name": "process_data_points",
      "description": "process_data_points",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/process_data_points"
      }
    },
    "rowFilter.process_data_points.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_data_points.process_id": {
      "name": "process_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_data_points.parameter_id": {
      "name": "parameter_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_data_points.value": {
      "name": "value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_data_points.set_point": {
      "name": "set_point",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_data_points.timestamp": {
      "name": "timestamp",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_data_points.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.component_definitions": {
      "name": "component_definitions",
      "description": "component_definitions",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/component_definitions"
      }
    },
    "rowFilter.component_definitions.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.name": {
      "name": "name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.type": {
      "name": "type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.default_parameters": {
      "name": "default_parameters",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.vendor": {
      "name": "vendor",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.part_number": {
      "name": "part_number",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.datasheet_url": {
      "name": "datasheet_url",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_definitions.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.migration_audit": {
      "name": "migration_audit",
      "description": "migration_audit",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/migration_audit"
      }
    },
    "rowFilter.migration_audit.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.migration_audit.migration_name": {
      "name": "migration_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.migration_audit.executed_at": {
      "name": "executed_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.migration_audit.records_affected": {
      "name": "records_affected",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.user_roles": {
      "name": "user_roles",
      "description": "user_roles",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/user_roles"
      }
    },
    "rowFilter.user_roles.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.name": {
      "name": "name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.display_name": {
      "name": "display_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.hierarchy_level": {
      "name": "hierarchy_level",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.permissions": {
      "name": "permissions",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.is_active": {
      "name": "is_active",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_roles.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.experiment_metadata": {
      "name": "experiment_metadata",
      "description": "experiment_metadata",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/experiment_metadata"
      }
    },
    "rowFilter.experiment_metadata.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.experiment_id": {
      "name": "experiment_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.parameter_tolerances": {
      "name": "parameter_tolerances",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.quality_threshold": {
      "name": "quality_threshold",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.parameter_units": {
      "name": "parameter_units",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.substrate_info": {
      "name": "substrate_info",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.environmental_conditions": {
      "name": "environmental_conditions",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.equipment_settings": {
      "name": "equipment_settings",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_metadata.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.component_parameter_definitions": {
      "name": "component_parameter_definitions",
      "description": "component_parameter_definitions",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/component_parameter_definitions"
      }
    },
    "rowFilter.component_parameter_definitions.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.component_definition_id": {
      "name": "component_definition_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.name": {
      "name": "name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.unit": {
      "name": "unit",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.default_min": {
      "name": "default_min",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.default_max": {
      "name": "default_max",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.is_writable": {
      "name": "is_writable",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameter_definitions.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.parameter_step_config": {
      "name": "parameter_step_config",
      "description": "parameter_step_config",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/parameter_step_config"
      }
    },
    "rowFilter.parameter_step_config.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_step_config.step_id": {
      "name": "step_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_step_config.parameter_id": {
      "name": "parameter_id",
      "description": "Reference to the component parameter to adjust",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_step_config.target_value": {
      "name": "target_value",
      "description": "Target value to set the parameter to",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_step_config.adjustment_rate": {
      "name": "adjustment_rate",
      "description": "Rate of parameter adjustment (units per second)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_step_config.hold_duration_ms": {
      "name": "hold_duration_ms",
      "description": "Duration to hold parameter at target value in milliseconds",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_step_config.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_step_config.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.recipes": {
      "name": "recipes",
      "description": "recipes",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/recipes"
      }
    },
    "rowFilter.recipes.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.name": {
      "name": "name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.version": {
      "name": "version",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.is_public": {
      "name": "is_public",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.created_by": {
      "name": "created_by",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.machine_type": {
      "name": "machine_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.substrate": {
      "name": "substrate",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.chamber_temperature_set_point": {
      "name": "chamber_temperature_set_point",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.pressure_set_point": {
      "name": "pressure_set_point",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipes.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.virtual_machine_server_status": {
      "name": "virtual_machine_server_status",
      "description": "virtual_machine_server_status",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/virtual_machine_server_status"
      }
    },
    "rowFilter.virtual_machine_server_status.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.virtual_machine_server_status.status": {
      "name": "status",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.virtual_machine_server_status.last_ping": {
      "name": "last_ping",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.virtual_machine_server_status.metadata": {
      "name": "metadata",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.virtual_machine_server_status.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.app_settings": {
      "name": "app_settings",
      "description": "app_settings",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/app_settings"
      }
    },
    "rowFilter.app_settings.key": {
      "name": "key",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.app_settings.value": {
      "name": "value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.app_settings.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.app_settings.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.app_settings.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.experiment_results": {
      "name": "experiment_results",
      "description": "experiment_results",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/experiment_results"
      }
    },
    "rowFilter.experiment_results.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.experiment_id": {
      "name": "experiment_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.quality_metrics": {
      "name": "quality_metrics",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.parameter_deviations": {
      "name": "parameter_deviations",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.observations": {
      "name": "observations",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.recommendations": {
      "name": "recommendations",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.measurements": {
      "name": "measurements",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.quality_score": {
      "name": "quality_score",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.critical_deviations": {
      "name": "critical_deviations",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.experiment_results.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.user_machine_preferences": {
      "name": "user_machine_preferences",
      "description": "user_machine_preferences",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/user_machine_preferences"
      }
    },
    "rowFilter.user_machine_preferences.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_preferences.user_id": {
      "name": "user_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_preferences.current_machine_id": {
      "name": "current_machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_preferences.last_switched_at": {
      "name": "last_switched_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_preferences.preferences": {
      "name": "preferences",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_preferences.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.user_machine_preferences.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.recipe_step_configs_archive": {
      "name": "recipe_step_configs_archive",
      "description": "recipe_step_configs_archive",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/recipe_step_configs_archive"
      }
    },
    "rowFilter.recipe_step_configs_archive.step_id": {
      "name": "step_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.recipe_id": {
      "name": "recipe_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.sequence_number": {
      "name": "sequence_number",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.step_name": {
      "name": "step_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.step_type": {
      "name": "step_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.parent_step_id": {
      "name": "parent_step_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.config": {
      "name": "config",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.archived_at": {
      "name": "archived_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.archive_reason": {
      "name": "archive_reason",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.recipe_step_configs_archive.original_table_name": {
      "name": "original_table_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.process_executions": {
      "name": "process_executions",
      "description": "process_executions",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/process_executions"
      }
    },
    "rowFilter.process_executions.id": {
      "name": "id",
      "description": "Primary key - referenced by process_execution_state.execution_id for state tracking",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.session_id": {
      "name": "session_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.recipe_id": {
      "name": "recipe_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.recipe_version": {
      "name": "recipe_version",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.start_time": {
      "name": "start_time",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.end_time": {
      "name": "end_time",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.operator_id": {
      "name": "operator_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.status": {
      "name": "status",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.parameters": {
      "name": "parameters",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.error_message": {
      "name": "error_message",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.process_executions.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.step_execution_history": {
      "name": "step_execution_history",
      "description": "step_execution_history",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/step_execution_history"
      }
    },
    "rowFilter.step_execution_history.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.process_id": {
      "name": "process_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.step_number": {
      "name": "step_number",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.step_type": {
      "name": "step_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.step_name": {
      "name": "step_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.started_at": {
      "name": "started_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.ended_at": {
      "name": "ended_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.parameters": {
      "name": "parameters",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.step_execution_history.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.parameter_control_commands": {
      "name": "parameter_control_commands",
      "description": "parameter_control_commands",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/parameter_control_commands"
      }
    },
    "rowFilter.parameter_control_commands.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.parameter_name": {
      "name": "parameter_name",
      "description": "Human readable parameter name (e.g., pump_1, nitrogen_generator, mfc_1)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.target_value": {
      "name": "target_value",
      "description": "Target value to set (1/0 for binary, actual value for numeric)",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.modbus_address": {
      "name": "modbus_address",
      "description": "Modbus address for this parameter",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.modbus_type": {
      "name": "modbus_type",
      "description": "Modbus register type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.machine_id": {
      "name": "machine_id",
      "description": "Machine this command belongs to",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.executed_at": {
      "name": "executed_at",
      "description": "When the command was executed",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.completed_at": {
      "name": "completed_at",
      "description": "When the command completed",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.error_message": {
      "name": "error_message",
      "description": "Error details if execution failed",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.parameter_control_commands.timeout_ms": {
      "name": "timeout_ms",
      "description": "Command timeout in milliseconds",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.component_parameters_full": {
      "name": "component_parameters_full",
      "description": "component_parameters_full",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/component_parameters_full"
      }
    },
    "rowFilter.component_parameters_full.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.component_id": {
      "name": "component_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.definition_id": {
      "name": "definition_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.parameter_name": {
      "name": "parameter_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.description": {
      "name": "description",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.unit": {
      "name": "unit",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.min_value": {
      "name": "min_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.max_value": {
      "name": "max_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.current_value": {
      "name": "current_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.set_value": {
      "name": "set_value",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.show_in_graph": {
      "name": "show_in_graph",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.is_writable": {
      "name": "is_writable",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.show_in_ui": {
      "name": "show_in_ui",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.modbus_address": {
      "name": "modbus_address",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.modbus_type": {
      "name": "modbus_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.data_type": {
      "name": "data_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.read_modbus_address": {
      "name": "read_modbus_address",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.read_modbus_type": {
      "name": "read_modbus_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.write_modbus_address": {
      "name": "write_modbus_address",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.write_modbus_type": {
      "name": "write_modbus_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.component_name": {
      "name": "component_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.component_type": {
      "name": "component_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.machine_serial": {
      "name": "machine_serial",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.machine_id": {
      "name": "machine_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.component_parameters_full.updated_at": {
      "name": "updated_at",
      "required": false,
      "in": "query",
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "PostgREST Documentation",
    "url": "https://postgrest.org/en/v12/references/api.html"
  }
}
